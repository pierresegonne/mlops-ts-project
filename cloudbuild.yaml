steps:
  # Docker Build
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Build'
    args: ['build', '--no-cache', '-t',
           'eu.gcr.io/${PROJECT_ID}/mlops-ts-project:${SHORT_SHA}', '.', '-f', 'Dockerfile']

  # Test
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Test'
    args: ['run', '--rm', '--entrypoint', 'poetry', 'eu.gcr.io/${PROJECT_ID}/mlops-ts-project:${SHORT_SHA}', 'run', 'check']

  # Docker push to Google Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Push'
    args: ['push',  'eu.gcr.io/${PROJECT_ID}/mlops-ts-project:${SHORT_SHA}']

  # Deploy to cloud run
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk:slim'
    id: 'Deploy'
    args: ['gcloud', 'run', 'services', 'update', 'mlops-ts-project',
           '--platform=managed', '--image=eu.gcr.io/${PROJECT_ID}/mlops-ts-project:${SHORT_SHA}',
           '--add-cloudsql-instances', 'tmrow-152415:europe-west1:pgdb', '--vpc-connector', 'shared-network',
           '--region=europe-west1', '--set-env-vars', 'POSTGRES_HOST=/cloudsql/tmrow-152415:europe-west1:pgdb',
           '--set-env-vars', 'POSTGRES_DB=electricitymap', '--set-env-vars', 'POSTGRES_USER=readonly',
           '--set-env-vars', 'EMAP_PROJECT_ID=tmrow-152415']

# Store images in Google Artifact Registry
images:
  - eu.gcr.io/${PROJECT_ID}/mlops-ts-project:${SHORT_SHA}

timeout: 3600s